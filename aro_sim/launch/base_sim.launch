<?xml version="1.0" encoding="utf-8" ?>
<!--
    Launch basic simulator with a world and Turtlebot.

    IMPORTANT: This file is not supposed to be changed by students.
-->

<launch>
    <arg name="gui" default="true"/>
    <arg name="rviz" default="true"/>
    <arg name="ground_truth" default="true"/>
    <arg name="fixed_frame" default="odom" doc="Just for visualization. Set this to match the fixed frame you use in RViz (i.e. map, fused_map, odom etc.)." />
    <arg name="odom_frame" default="odom" doc="Odometry topic to be converted to tf." />
    <arg name="real_time_factor" default="1.0" doc="Set to less than 1 to slow down the simulation." />
    <arg name="keyboard_teleop" default="false" doc="Set to true to enable control of the robot via keyboard" />
    <arg name="joy_teleop" default="false" doc="Set to true to enable control of the robot via gamepad" />
    <arg name="rviz_config" default="$(dirname)/../rviz/base_sim.rviz" doc="Rviz config." />
    <arg name="gazebo_verbose" default="false" doc="Turn on verbose logging of Gazebo." />
    <arg name="software_rendering" default="$(optenv ARO_HEADLESS false)" />

    <arg name="world" default="aro_eval_1" doc="{house, stage_1, stage_2, stage_3, stage_4, world}"/>
    <!-- turtlebot3_gazebo worlds -->
    <arg name="world_file" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_$(arg world).world"
         if="$(eval world in ('house', 'stage_1', 'stage_2', 'stage_3', 'stage_4', 'world'))"/>
    <arg if="$(eval world == 'world')" name="spawn_args" default="-x -2.0 -y 0 -z 0.0 -Y 3.141592"/>
    <arg if="$(eval world == 'house')" name="spawn_args" default="-x -3.0 -y 1.0 -z 0.0"/>
    <arg if="$(eval world == 'stage_1')" name="spawn_args" default="-x 0.0 -y 0.0 -z 0.0"/>
    <arg if="$(eval world == 'stage_2')" name="spawn_args" default="-x 0.0 -y 0.0 -z 0.0"/>
    <arg if="$(eval world == 'stage_3')" name="spawn_args" default="-x 0.0 -y 0.0 -z 0.0"/>
    <arg if="$(eval world == 'stage_4')" name="spawn_args" default="-x -0.7 -y 0.0 -z 0.0"/>

    <!-- aro_sim worlds -->
    <arg name="world_file" value="$(dirname)/../worlds/$(arg world).world"
         if="$(eval world in ('aro_maze_1', 'aro_maze_2', 'aro_maze_8', 'aro_hallway_1', 'aro_eval_1', 'aro_eval_2', 'lab_e130', 'aro_easy_1', 'aro_easy_2', 'aro_easy_3', 'aro_medium_1', 'aro_medium_2', 'aro_medium_3', 'aro_hard_1', 'aro_hard_2', 'aro_hard_3'))"/>
    <arg if="$(eval world == 'aro_maze_1')" name="spawn_args" default="-x 0.0 -y 0.0 -z 0.0"/>
    <arg if="$(eval world == 'aro_maze_2')" name="spawn_args" default="-x 0.0 -y 0.0 -z 0.0"/>
    <arg if="$(eval world == 'aro_maze_8')" name="spawn_args" default="-x 1.0 -y 0.0 -z 0.0"/>
    <arg if="$(eval world == 'aro_hallway_1')" name="spawn_args" default="-x 0.0 -y 0.0 -z 0.0"/>
    <arg if="$(eval world == 'aro_eval_1')" name="spawn_args" default="-x 0.0 -y 0.0 -z 0.0 -Y -1.5708"/>
    <arg if="$(eval world == 'aro_eval_2')" name="spawn_args" default="-x 0.0 -y 0.0 -z 0.0 -Y -1.5708"/>
    <arg if="$(eval world == 'lab_e130')" name="spawn_args" default="-x -0.5 -y 0.0 -z 0.0"/>
    <arg if="$(eval world == 'aro_easy_1')" name="spawn_args" default="-x -3.35 -y -2.5 -z 0.0"/>
    <arg if="$(eval world == 'aro_easy_2')" name="spawn_args" default="-x 1.0 -y -1.0 -z 0.0"/>
    <arg if="$(eval world == 'aro_easy_3')" name="spawn_args" default="-x 0.0 -y 0.0 -z 0.0"/>
    <arg if="$(eval world == 'aro_medium_1')" name="spawn_args" default="-x -0.5 -y 0.25 -z 0.0"/>
    <arg if="$(eval world == 'aro_medium_2')" name="spawn_args" default="-x -7.0 -y 4.0 -z 0.0"/>


    <param name="use_sim_time" value="true"/>

    <include file="$(find aro_sim)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_file)"/>
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
        <arg name="verbose" value="$(arg gazebo_verbose)"/>
        <arg name="software_rendering" value="$(arg software_rendering)"/>
        <arg name="output" value="screen"/>
    </include>
    <group if="$(eval real_time_factor != 1.0)">
        <arg name="max_update_rate" value="$(eval 1000.0 * real_time_factor)" />
        <node name="set_rtf" pkg="dynamic_reconfigure" type="dynparam" args="set gazebo max_update_rate $(arg max_update_rate)" />
    </group>

    <param name="robot_description"
           command="$(find xacro)/xacro $(dirname)/../urdf/turtlebot3_burger_rgbd.urdf.xacro ground_truth:=$(arg ground_truth)"/>
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
          args="-urdf -model turtlebot3_burger_rgbd $(arg spawn_args) -param robot_description"/>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true"/>

    <!-- Convert /odom messages to transforms on /tf -->
    <node name="odom_to_tf" pkg="nav_utils" type="odom_to_tf" respawn="true">
        <remap from="odom" to="$(arg odom_frame)"/>
    </node>

    <!-- Support for teleoperation -->
    <include file="$(dirname)/teleop_joy.launch" if="$(arg joy_teleop)" />
    <include file="$(dirname)/teleop_keyboard.launch" if="$(arg keyboard_teleop)" />

    <node name="visualize_ground_truth" pkg="cras_topic_tools" type="change_header" respawn="true" if="$(arg ground_truth)">
        <param name="frame_id" value="$(arg fixed_frame)" />
        <remap from="~input" to="ground_truth_odom" />
        <remap from="~output" to="ground_truth_odom_vis" />
    </node>

    <node name="visualize_odom" pkg="cras_topic_tools" type="change_header" respawn="true">
        <param name="frame_id" value="$(arg fixed_frame)" />
        <remap from="~input" to="odom" />
        <remap from="~output" to="odom_vis" />
    </node>
    
    <node if="$(arg rviz)" name="rviz" pkg="rviz" type="rviz"
          args="-d $(arg rviz_config) -f $(arg fixed_frame)"/>

</launch>
